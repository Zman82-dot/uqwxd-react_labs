{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","_React$useState","React","useState","_React$useState2","Object","slicedToArray","todos","setTodos","_React$useState3","_React$useState4","todo","setTodo","_React$useState5","_React$useState6","todoEditing","setTodoEditing","_React$useState7","_React$useState8","editingText","setEditingText","useEffect","json","localStorage","getItem","loadedTodos","JSON","parse","stringify","setItem","react_default","a","createElement","id","onSubmit","e","preventDefault","newTodo","Date","getTime","text","trim","completed","length","toConsumableArray","concat","alert","type","onChange","target","value","map","key","className","checked","updatedTodos","toggleComplete","onClick","submitEdits","filter","deleteTodo","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"oMA+GeA,SA5GH,WAAM,IAAAC,EACUC,IAAMC,SAAS,IADzBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,GACTM,EADSH,EAAA,GACFI,EADEJ,EAAA,GAAAK,EAEQP,IAAMC,SAAS,IAFvBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETE,EAFSD,EAAA,GAEHE,EAFGF,EAAA,GAAAG,EAIsBX,IAAMC,SAAS,MAJrCW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAITE,EAJSD,EAAA,GAIIE,EAJJF,EAAA,GAAAG,EAKsBf,IAAMC,SAAS,IALrCe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GAKTE,EALSD,EAAA,GAKIE,EALJF,EAAA,GAgEd,OAzDFhB,IAAMmB,UAAU,WACd,IAAMC,EAAOC,aAAaC,QAAQ,SAC5BC,EAAcC,KAAKC,MAAML,GAC3BG,GACFjB,EAASiB,IAEV,IAEHvB,IAAMmB,UAAU,WACd,IAAMC,EAAOI,KAAKE,UAAUrB,GAC5BgB,aAAaM,QAAQ,QAASP,IAC7B,CAACf,IA+CEuB,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACNH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,QAAME,SA/Cd,SAAsBC,GACpBA,EAAEC,iBAEF,IAAMC,EAAU,CACdJ,IAAI,IAAIK,MAAOC,UACfC,KAAM7B,EAAK8B,OACXC,WAAW,GAETL,EAAQG,KAAKG,OAAS,GACtBnC,EAASH,OAAAuC,EAAA,EAAAvC,CAAIE,GAAOsC,OAAOR,IAC3BzB,EAAQ,MAIRkC,MAAM,oBACNlC,EAAQ,OAiCJkB,EAAAC,EAAAC,cAAA,SACEe,KAAK,OACLC,SAAU,SAACb,GAAD,OAAOvB,EAAQuB,EAAEc,OAAOC,QAClCA,MAAOvC,IAETmB,EAAAC,EAAAC,cAAA,UAAQe,KAAK,UAAb,aAEDxC,EAAM4C,IAAI,SAACxC,GAAD,OACTmB,EAAAC,EAAAC,cAAA,OAAKoB,IAAKzC,EAAKsB,GAAIoB,UAAU,QAC3BvB,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,aACbvB,EAAAC,EAAAC,cAAA,SACEe,KAAK,WACLd,GAAG,YACHqB,QAAS3C,EAAK+B,UACdM,SAAU,kBAvC1B,SAAwBf,GACtB,IAAIsB,EAAelD,OAAAuC,EAAA,EAAAvC,CAAIE,GAAO4C,IAAI,SAACxC,GAIjC,OAHIA,EAAKsB,KAAOA,IACdtB,EAAK+B,WAAa/B,EAAK+B,WAElB/B,IAETH,EAAS+C,GAgCqBC,CAAe7C,EAAKsB,OAErCtB,EAAKsB,KAAOlB,EACXe,EAAAC,EAAAC,cAAA,SACEe,KAAK,OACLC,SAAU,SAACb,GAAD,OAAOf,EAAee,EAAEc,OAAOC,UAG3CpB,EAAAC,EAAAC,cAAA,WAAMrB,EAAK6B,OAGfV,EAAAC,EAAAC,cAAA,OAAKqB,UAAU,gBACZ1C,EAAKsB,KAAOlB,EACXe,EAAAC,EAAAC,cAAA,UAAQyB,QAAS,kBA1CjC,SAAqBxB,GACnB,IAAMsB,EAAelD,OAAAuC,EAAA,EAAAvC,CAAIE,GAAO4C,IAAI,SAACxC,GAIjC,OAHEA,EAAKsB,KAAOA,IACdtB,EAAK6B,KAAOrB,GAELR,IAETH,EAAS+C,GACTvC,EAAe,MAkCoB0C,CAAY/C,EAAKsB,MAAxC,gBAEAH,EAAAC,EAAAC,cAAA,UAAQyB,QAAS,kBAAMzC,EAAeL,EAAKsB,MAA3C,QAGFH,EAAAC,EAAAC,cAAA,UAAQyB,QAAS,kBA9D/B,SAAoBxB,GAClB,IAAIsB,EAAelD,OAAAuC,EAAA,EAAAvC,CAAIE,GAAOoD,OAAO,SAAChD,GAAD,OAAUA,EAAKsB,KAAOA,IAC3DzB,EAAS+C,GA4D0BK,CAAWjD,EAAKsB,MAAvC,iBC3FD4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAA7B,EAAA,GAAA8B,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,WAAP,KACEhD,EAAAC,EAAAC,cAAC+C,EAAD,QAOJlB","file":"static/js/main.0b02e3b1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = React.useState([]);\n  const [todo, setTodo] = React.useState(\"\");\n\n  const [todoEditing, setTodoEditing] = React.useState(null);\n  const [editingText, setEditingText] = React.useState(\"\");\n\n  React.useEffect(() => {\n    const json = localStorage.getItem(\"todos\");\n    const loadedTodos = JSON.parse(json);\n    if (loadedTodos) {\n      setTodos(loadedTodos);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const json = JSON.stringify(todos);\n    localStorage.setItem(\"todos\", json);\n  }, [todos]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    const newTodo = {\n      id: new Date().getTime(),\n      text: todo.trim(),\n      completed: false,\n    };\n    if (newTodo.text.length > 0 ) {\n        setTodos([...todos].concat(newTodo));\n        setTodo(\"\");\n    \n    } else {\n        \n        alert(\"Enter Valid Task\");\n        setTodo(\"\"); \n    }\n  }\n  function deleteTodo(id) {\n    let updatedTodos = [...todos].filter((todo) => todo.id !== id);\n    setTodos(updatedTodos);\n  }\n\n  function toggleComplete(id) {\n    let updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  }\n\n  function submitEdits(id) {\n    const updatedTodos = [...todos].map((todo) => {\n      if (todo.id === id) {\n        todo.text = editingText;\n        }\n        return todo;\n      });\n      setTodos(updatedTodos);\n      setTodoEditing(null);\n    }\n\n    return (\n        <div id=\"todo-list\">\n          <h1>Todo List</h1>\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"text\"\n              onChange={(e) => setTodo(e.target.value)}\n              value={todo}\n            />\n            <button type=\"submit\">Add Todo</button>\n          </form>\n          {todos.map((todo) => (\n            <div key={todo.id} className=\"todo\">\n              <div className=\"todo-text\">\n                <input\n                  type=\"checkbox\"\n                  id=\"completed\"\n                  checked={todo.completed}\n                  onChange={() => toggleComplete(todo.id)}\n                />\n                {todo.id === todoEditing ? (\n                  <input\n                    type=\"text\"\n                    onChange={(e) => setEditingText(e.target.value)}\n                  />\n                ) : (\n                  <div>{todo.text}</div>\n                )}\n              </div>\n              <div className=\"todo-actions\">\n                {todo.id === todoEditing ? (\n                  <button onClick={() => submitEdits(todo.id)}>Submit Edits</button>\n                ) : (\n                  <button onClick={() => setTodoEditing(todo.id)}>Edit</button>\n                )}\n    \n                <button onClick={() => deleteTodo(todo.id)}>Delete</button>\n              </div>\n            </div>\n          ))}\n        </div>\n      );\n    };\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}